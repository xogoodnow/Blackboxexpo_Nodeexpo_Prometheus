

# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
#    - "first_rules.yml"
#    - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

  - job_name: "node"
    static_configs:
      - targets:
{% for host in groups['all'] %}
{% if hostvars[host]['role'] == 'monitoring' %}
            - 127.0.0.1:9100
{% else %}
            - {{ hostvars[host]['ansible_host'] }}:9100
{% endif %}
{% endfor %}


{% for host in groups['all'] %}

  - job_name: "{{ host }}_blackbox_http"
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://google.com
        - https://arvancloud.ir
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {% if hostvars[host]['role'] == 'monitoring' %}127.0.0.1:9115{% else %}{{ hostvars[host]['ansible_host'] }}:9115{% endif %}
{% endfor %}




{% for host in groups['all'] %}

  - job_name: '{{ host }}_blackbox_icmp'
    metrics_path: /probe
    params:
      module: [icmp]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
        - 8.8.8.8    # Google
        - 1.1.1.1   # Cloudflare
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {% if hostvars[host]['role'] == 'monitoring' %}127.0.0.1:9115{% else %}{{ hostvars[host]['ansible_host'] }}:9115{% endif %}
{% endfor %}







